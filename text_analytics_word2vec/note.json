{"paragraphs":[{"text":"%md\n\n<h3>Text Analytics - Word2Vec </h3>\n<p>\n<br><strong>Purpose:</strong>\n<br>Shows a Word2Vec example that produces word synonyms (vectors) based on \ncosine similarity found within the customer reviews.\n<br>\n<br><strong>Input Dataset:</strong> \n<br>Airline Reviews (CSV format) stored in HDFS. These are real customer reviews, which I collected it using a custom webcrawler.\n<br>\n<br><strong>Output Result:</strong>\n<br>Function that accepts a word, and returns a list of synonyms.\n</p>","dateUpdated":"Jul 29, 2016 12:20:42 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469461261041_-857892065","id":"20160725-154101_1016356310","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Text Analytics - Word2Vec </h3>\n<p>\n<br><strong>Purpose:</strong>\n<br>Shows a Word2Vec example that produces word synonyms (vectors) based on \ncosine similarity found within the customer reviews.\n<br>\n<br><strong>Input Dataset:</strong> \n<br>Airline Reviews (CSV format) stored in HDFS. These are real customer reviews, which I collected it using a custom webcrawler.\n<br>\n<br><strong>Output Result:</strong>\n<br>Function that accepts a word, and returns a list of synonyms.\n</p>\n"},"dateCreated":"Jul 25, 2016 3:41:01 PM","dateStarted":"Jul 29, 2016 12:20:42 PM","dateFinished":"Jul 29, 2016 12:20:42 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1016"},{"text":"%pyspark\n\nfrom pyspark.mllib.feature import Word2Vec\nimport re\n\n#########################################################################################\n# Import CSV data from HDFS\n#########################################################################################\nrawdata = sc.textFile('hdfs://sandbox.hortonworks.com/tmp/airlines.csv')\nheader  = rawdata.first()\nrawdata = rawdata.filter(lambda x: x!=header)\n\n\n#########################################################################################\n# Extract all reviews (ie. unstrucutured text fields)\n#########################################################################################\nreviews = rawdata.map(lambda x: x.split(',')[8])\n\n\n#########################################################################################\n# Create word vectors for each review.\n# Cleanup the text a bit - Remove Stopwords, punctuation, factor in word length.\n# There's more cleanup that can be done for this example, but these are a few \n# text/unstructured data processing techniques.\n#########################################################################################\n\nstopwords = ['a', u'about', u'above', u'after', u'again', u'against', u'all', u'am', u'an', u'and', u'any', u'are', u'arent', u'as', u'at', u'be', u'because', u'been', u'before', u'being', u'below', u'between', u'both', u'but', u'by', u'can', 'cant', 'come', u'could', 'couldnt', u'd', u'did', u'didn', u'do', u'does', u'doesnt', u'doing', u'dont', u'down', u'during', u'each', u'few', 'finally', u'for', u'from', u'further', u'had', u'hadnt', u'has', u'hasnt', u'have', u'havent', u'having', u'he', u'her', u'here', u'hers', u'herself', u'him', u'himself', u'his', u'how', u'i', u'if', u'in', u'into', u'is', u'isnt', u'it', u'its', u'itself', u'just', u'll', u'm', u'me', u'might', u'more', u'most', u'must', u'my', u'myself', u'no', u'nor', u'not', u'now', u'o', u'of', u'off', u'on', u'once', u'only', u'or', u'other', u'our', u'ours', u'ourselves', u'out', u'over', u'own', u're', u's', 'said', u'same', u'she', u'should', u'shouldnt', u'so', u'some', u'such', u't', u'than', u'that', 'thats', u'the', u'their', u'theirs', u'them', u'themselves', u'then', u'there', u'these', u'they', u'this', u'those', u'through', u'to', u'too', u'under', u'until', u'up', u'very', u'was', u'wasnt', u'we', u'were', u'werent', u'what', u'when', u'where', u'which', u'while', u'who', u'whom', u'why', u'will', u'with', u'wont', u'would', u'y', u'you', u'your', u'yours', u'yourself', u'yourselves']\n\nwords = reviews.map(lambda x: x.split(' ')) \\\n               .map(lambda x: [re.sub('[^a-zA-Z0-9]','',word).lower().strip() for word in x]) \\\n               .map(lambda x: [word for word in x if (word not in stopwords) and len(word)>2])\n\n\n#########################################################################################\n# Generate Word2Vec Model w/ Seed \n#########################################################################################\nword2vec = Word2Vec().setSeed(101).setVectorSize(20)\nmodel    = word2vec.fit(words)\n\n\n#########################################################################################\n# Synonym Function\n#\n# term = The word that you'd like to find synonyms for\n# n    = The number of synonyms to return\n#########################################################################################\ndef get_synonyms(term, n):\n    synonyms = model.findSynonyms(term, n)\n    return synonyms","dateUpdated":"Jul 29, 2016 12:48:34 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469461246339_-2029098366","id":"20160725-154046_1842837110","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"Jul 25, 2016 3:40:46 PM","dateStarted":"Jul 29, 2016 12:48:34 PM","dateFinished":"Jul 29, 2016 12:48:36 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1017","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469795516442_-2145997322","id":"20160729-123156_1692566277","dateCreated":"Jul 29, 2016 12:31:56 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1162","text":"%pyspark\n\n#########################################################################################\n#\n#   Model Testing\n#\n#########################################################################################\n\nterm1 = 'delayed'\n\nprint '\\r\\nSimilar terms found in relation to: ' + str(term1)\nprint '--------------------------------------------\\r\\nCosine Distance\\t\\tTerm\\r\\n--------------------------------------------'\nfor i in get_synonyms(term1, 15):\n    print str(i[1]) + '\\t\\t' + str(i[0])","dateUpdated":"Jul 29, 2016 12:49:27 PM","dateFinished":"Jul 29, 2016 12:49:27 PM","dateStarted":"Jul 29, 2016 12:49:27 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"\r\nSimilar terms found in relation to: delayed\n--------------------------------------------\r\nCosine Distance\t\tTerm\r\n--------------------------------------------\n1.2408220207\t\tdue\n1.22869122776\t\tmissed\n1.21889948638\t\tlater\n1.2052156249\t\tlate\n1.20407265572\t\tmechanical\n1.19281549349\t\tconnection\n1.19231028463\t\tchicago\n1.18579218951\t\tdenver\n1.16915781001\t\tmaintenance\n1.16648660746\t\tconnecting\n1.16609631825\t\thouston\n1.16589094115\t\tweather\n1.16562901624\t\tcancelled\n1.16021187564\t\tdestination\n1.15961824444\t\tnight\n"}},{"text":"%md\n\n<p>\n<strong>Note:</strong> These vectors can then be added/subtracted to create intersections of interest. In python, this can be done using sets, such as:\n<br>set(synonym_vector1) - set(synonym_vector2 + synonym_vector3) \n<br>\n<br>\n</p>\n\n<h5>Dan Zaratsian - July 2016 </h5>","dateUpdated":"Jul 29, 2016 1:09:24 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469461902605_1572841451","id":"20160725-155142_879792277","result":{"code":"SUCCESS","type":"HTML","msg":"<p>\n<strong>Note:</strong> These vectors can then be added/subtracted to create intersections of interest. In python, this can be done using sets, such as:\n<br>set(synonym_vector1) - set(synonym_vector2 + synonym_vector3) \n<br>\n<br>\n</p>\n<h5>Dan Zaratsian - July 2016 </h5>\n"},"dateCreated":"Jul 25, 2016 3:51:42 PM","dateStarted":"Jul 29, 2016 1:09:21 PM","dateFinished":"Jul 29, 2016 1:09:21 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1018","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469795716765_872048027","id":"20160729-123516_876811112","dateCreated":"Jul 29, 2016 12:35:16 PM","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1217"}],"name":"z_TextAnalytics_Word2Vec","id":"2BR28V7YP","angularObjects":{"2BQ9Y66FH":[],"2BRP5663K":[],"2BTGEXB4E":[],"2BSQWXCH6":[],"2BTMKA19Z":[],"2BTR1A48W":[],"2BQJ6U96F":[],"2BSPSGWCB":[],"2BS87HHBV":[],"2BSQWMA8N":[],"2BRF6H8MG":[],"2BS2FND5T":[],"2BT4F2H1E":[]},"config":{"looknfeel":"default"},"info":{}}