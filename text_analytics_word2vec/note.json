{"paragraphs":[{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469461261041_-857892065","id":"20160725-154101_1016356310","dateCreated":"Jul 25, 2016 3:41:01 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:470","text":"%md\n\n<h3>Text Analytics - Word2Vec </h3>\n<p>\n<br><strong>Purpose:</strong>\n<br>Shows a Word2Vec example that produces word synonyms based on \ncosine similarity found within the customer reviews.\n<br>\n<br><strong>Input Dataset:</strong> \n<br>Airline Reviews as CSV file in HDFS (which I collected using a custom webcrawler)\n<br>\n<br><strong>Output Result:</strong> \n<br>Function that accepts a word, and returns a list of synonyms.\n</p>","dateUpdated":"Jul 25, 2016 3:54:21 PM","dateFinished":"Jul 25, 2016 3:52:29 PM","dateStarted":"Jul 25, 2016 3:52:29 PM","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Text Analytics - Word2Vec </h3>\n<p>\n<br><strong>Purpose:</strong>\n<br>Shows a Word2Vec example that produces word synonyms based on \ncosine similarity found within the customer reviews.\n<br>\n<br><strong>Input Dataset:</strong> \n<br>Airline Reviews as CSV file in HDFS (which I collected using a custom webcrawler)\n<br>\n<br><strong>Output Result:</strong> \n<br>Function that accepts a word, and returns a list of synonyms.\n</p>\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469461246339_-2029098366","id":"20160725-154046_1842837110","dateCreated":"Jul 25, 2016 3:40:46 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:447","text":"%pyspark\n\nfrom pyspark.mllib.feature import Word2Vec\nimport re\n\n#########################################################################################\n# Import CSV data from HDFS\n#########################################################################################\nrawdata = sc.textFile('hdfs://sandbox.hortonworks.com/tmp/airlines.csv')\nheader  = rawdata.first()\nrawdata = rawdata.filter(lambda x: x!=header)\n\n\n#########################################################################################\n# Extract all reviews (ie. unstrucutured text fields)\n#########################################################################################\nreviews = rawdata.map(lambda x: x.split(',')[8])\n\n\n#########################################################################################\n# Create word vectors for each review\n#########################################################################################\nwords = reviews.map(lambda x: x.split(' ')) \\\n               .map(lambda x: [re.sub('[^a-zA-Z0-9]','',word).lower().strip() for word in x if len(word)>2])\n\n\n#########################################################################################\n# Generate Word2Vec Model w/ Seed \n#########################################################################################\nword2vec = Word2Vec().setSeed(100)\nmodel    = word2vec.fit(words)\n\n\n#########################################################################################\n# Synonym Function\n#\n# term = The word that you'd like to find synonyms for\n# n    = The number of synonyms to return\n#########################################################################################\ndef get_synonyms(term, n):\n    synonyms = model.findSynonyms(term, n)\n    return synonyms\n    \n    \n#    for word, cosine_distance in synonyms:\n#        print str(cosine_distance) + '\\t' + str(word)\n\n\n#########################################################################################\n# Model Testing\n#########################################################################################\n\nfor i in get_synonyms('problem', 10):\n    print str(i[1]) + '\\t' + str(i[0])\n\nprint '\\r\\n\\r\\n'\n\nprint get_synonyms('failure', 10)\n","dateUpdated":"Jul 25, 2016 4:26:49 PM","dateFinished":"Jul 25, 2016 4:26:52 PM","dateStarted":"Jul 25, 2016 4:26:49 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"0.326514082812\tnearly\n0.31581076475\tadditional\n0.312389256204\tarrive\n0.306658614377\tplans\n0.304794916932\twait\n0.304356728236\tallow\n0.303843866224\tfuel\n0.301734757636\tturned\n0.296083313308\ttaking\n0.291517593985\thotel\n\r\n\r\n\n[(u'arriving', 0.12741637118064772), (u'change', 0.12357757340358898), (u'diverted', 0.12346143005741748), (u'early', 0.12164942658983983), (u'evening', 0.121278908047542), (u'hrs', 0.12006923345896792), (u'12', 0.11984150568634512), (u'phx', 0.11856009075407234), (u'baltimore', 0.1178304102036177), (u'boarded', 0.11704681933149687)]\n"},"focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469461902605_1572841451","id":"20160725-155142_879792277","dateCreated":"Jul 25, 2016 3:51:42 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:600","text":"%md\n\n##### Dan Zaratsian - July 2016","dateUpdated":"Jul 25, 2016 3:51:57 PM","dateFinished":"Jul 25, 2016 3:51:57 PM","dateStarted":"Jul 25, 2016 3:51:57 PM","result":{"code":"SUCCESS","type":"HTML","msg":"<h5>Dan Zaratsian - July 2016</h5>\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469463162076_1194822106","id":"20160725-161242_1307933078","dateCreated":"Jul 25, 2016 4:12:42 PM","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:812"}],"name":"z_TextAnalytics_Word2Vec","id":"2BR28V7YP","angularObjects":{"2BQ9Y66FH":[],"2BRP5663K":[],"2BTGEXB4E":[],"2BSQWXCH6":[],"2BTMKA19Z":[],"2BTR1A48W":[],"2BQJ6U96F":[],"2BSPSGWCB":[],"2BS87HHBV":[],"2BSQWMA8N":[],"2BRF6H8MG":[],"2BS2FND5T":[],"2BT4F2H1E":[]},"config":{"looknfeel":"default"},"info":{}}